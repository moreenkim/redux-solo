{"version":3,"sources":["store/users/actionTypes.js","store/users/reducer.js","store/bootcamps/actionTypes.js","store/bootcamps/reducer.js","services/bootcamps.js","store/errorHandler/actionTypes.js","store/bootcamps/actions.js","component/DetailView.js","container/BootcampDetail.js","component/DetailViewCard.js","container/AllBootcamps.js","container/UserForm.js","component/FormView.js","services/users.js","store/users/actions.js","container/UserLogin.js","store/errorHandler/reducer.js","container/RegisterForm.js","container/UserRegister.js","component/ViewProfile.js","container/ProfileView.js","container/ReviewForm.js","container/AddReview.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN","USER_PROFILE","initialState","Immutable","token","profile","reduce","state","action","type","types","merge","getUserToken","users","userAuthenticatedSelector","CURRENT_BOOTCAMP_FETCHED","ALL_BOOTCAMPS_FETCHED","currentBootcamp","allBootcamps","bootcampData","bootcampsData","getBootcamp","bootcamps","getAllBootcamps","url","fetch","method","headers","Accept","response","ok","Error","status","json","apiResponse","errors","id","payload","Authorization","body","JSON","stringify","success","error","REQUEST_FAILURE","REQUEST_SUCCESS","fetchBootcamp","dispatch","a","BootcampDetails","console","fetchAllBootcamps","writeReview","addReview","errorHandlerTypes","DetailView","props","data","name","description","photo","rating","_id","Container","Row","Col","md","src","className","alt","to","class","BootcampDetail","this","match","params","log","bootcamp","asMutable","Object","keys","length","Spinner","color","style","width","height","Component","connect","bootcampSelectors","bindActionCreators","bootcampActions","DetailViewCard","Card","CardImg","CardBody","CardTitle","tag","CardText","AllBootcamps","count","map","UserForm","initialData","initialValues","onSubmit","values","setSubmitting","setStatus","email","password","formActionDispatch","then","render","handleChange","handleBlur","handleSubmit","isSubmitting","Form","FormGroup","sm","Input","bsSize","placeholder","aria-label","onChange","onBlur","value","size","Button","disabled","link","ownProps","FormView","offset","form","authenticateUserAction","UserService","authenticateUser","userAuthenticatedAction","userAuthenticated","registerUser","newUserRegister","errorMessage","UserLogin","userActions","hasError","getHasError","errorHandler","getErrorMessage","transformMyApiErrors","array","field","split","message","pop","RegisterForm","getValidationSchema","bind","validationSchema","validateSync","abortEarly","getErrorsFromValidationError","validator","Yup","required","role","shape","validate","setErrors","Alert","validationError","inner","path","errorHandlerSelectors","UserRegister","ViewProfile","ProfileView","userSelectors","ReviewForm","title","text","withRouter","AddReview","App","Navbar","light","expand","NavbarBrand","Nav","navbar","NavItem","activeClassName","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","reducers","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e47e96f.chunk.js","sourcesContent":["export const IS_LOGGED_IN = 'users.IS_LOGGED_IN';\nexport const TOKEN = 'users.TOKEN';\nexport const USER_PROFILE = 'users.USER_PROFILE';\n","import Immutable from 'seamless-immutable';\n\nimport * as types from './actionTypes';\n\nconst initialState = Immutable({\n  // isLoggedIn: {},\n  token: null,\n  profile: {},\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    // case types.IS_LOGGED_IN:\n    //   return state.merge({\n    //     isLoggedIn: action.userStatus\n    //   })\n    case types.TOKEN:\n      return state.merge({\n        token: action.token,\n      });\n    case types.USER_PROFILE:\n      return state.merge({\n        profile: action.profile,\n      });\n    default:\n      return state;\n  }\n}\n\n//selectors, get data from store\n// export function getuserStatus(state) {\n//   return state.userStatus.isLoggedIn\n// }\n\nexport function getUserToken(state) {\n  return state.users.token;\n}\n\nexport function userAuthenticatedSelector(state) {\n  return state.users.profile;\n}\n","export const CURRENT_BOOTCAMP_FETCHED = 'bootcamps.CURRENT_BOOTCAMP_FETCHED';\nexport const ALL_BOOTCAMPS_FETCHED = 'bootcamps.ALL_BOOTCAMPS_FETCHED ';\n","//import _ from 'lodash';\nimport Immutable from 'seamless-immutable';\n\nimport * as types from './actionTypes';\n\nconst initialState = Immutable({\n  currentBootcamp: {},\n  allBootcamps: {},\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.CURRENT_BOOTCAMP_FETCHED:\n      return state.merge({\n        currentBootcamp: action.bootcampData,\n      });\n    case types.ALL_BOOTCAMPS_FETCHED:\n      return state.merge({\n        allBootcamps: action.bootcampsData,\n      });\n    default:\n      return state;\n  }\n}\n\n//selectors gets data from store\nexport function getBootcamp(state) {\n  return state.bootcamps.currentBootcamp;\n}\n\nexport function getAllBootcamps(state) {\n  return state.bootcamps.allBootcamps;\n}\n","class BootcampDetails {\n  async getAllBootcamps(url = 'http://localhost:5000/api/v1/bootcamps') {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application.json',\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\n        `BootcampDetails getAllBootcamps failed, status ${response.status}`\n      );\n    }\n\n    const apiResponse = await response.json();\n\n    if (response.status === 400) {\n      throw apiResponse.errors;\n    }\n    return apiResponse;\n  }\n\n  async getBootcamp(id) {\n    const url = `http://localhost:5000/api/v1/bootcamps/${id}`;\n    const response = await fetch(url, {\n      method: 'GET',\n    });\n    if (!response.ok) {\n      throw new Error(\n        `BootcampDetails getBootcamp failed, HTTP status ${response.status}`\n      );\n    }\n    //return apiresponse\n\n    const apiResponse = await response.json();\n\n    if (response.status === 400) {\n      throw apiResponse.errors;\n    }\n    return apiResponse;\n  }\n\n  async addReview({ id, payload, token }) {\n    const url = `http://localhost:5000/api/v1/bootcamps/${id}/reviews`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n    if (!response.ok) {\n      throw new Error(\n        `BootcampDetails addReview failed, HTTP status ${response.status}`\n      );\n    }\n\n    //return api response\n    const apiResponse = await response.json();\n\n    if (!apiResponse.success) {\n      throw apiResponse.error;\n    }\n\n    return apiResponse.success;\n  }\n}\n\nexport default new BootcampDetails();\n","export const REQUEST_FAILURE = 'errorHandler.REQUEST_FAILURE';\nexport const REQUEST_SUCCESS = 'errorHandler.REQUEST_SUCCESS';\n","import BootcampDetails from '../../services/bootcamps';\nimport * as types from './actionTypes';\nimport * as errorHandlerTypes from '../errorHandler/actionTypes';\n\nexport function fetchBootcamp(id) {\n  return async (dispatch) => {\n    try {\n      const bootcampData = await BootcampDetails.getBootcamp(id);\n\n      dispatch({\n        type: types.CURRENT_BOOTCAMP_FETCHED,\n        bootcampData,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport function fetchAllBootcamps() {\n  return async (dispatch) => {\n    try {\n      const bootcampsData = await BootcampDetails.getAllBootcamps();\n\n      dispatch({\n        type: types.ALL_BOOTCAMPS_FETCHED,\n        bootcampsData,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport function writeReview(payload) {\n  return async (dispatch) => {\n    try {\n      await BootcampDetails.addReview(payload);\n      dispatch({\n        type: errorHandlerTypes.REQUEST_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: errorHandlerTypes.REQUEST_FAILURE,\n      });\n    }\n  };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n// const DetailView = ({ data: { name, phone, email, description } }) => {\n// //   return (\n//     <div>\n//       <p>name: {name}</p>\n//       <p>phone: {phone}</p>\n//       <p>email: {email}</p>\n//       <p>description: {description}</p>\n//     </div>\n//   );\n// };\n\nconst DetailView = (props) => {\n  const { name, description, photo, rating, _id } = props.data;\n  return (\n    <Container>\n      <Row>\n        <Col md=\"8\">\n          <h1>{name}</h1>\n          <p>{description}</p>\n        </Col>\n\n        <Col md=\"4\">\n          <img\n            src={`http://localhost:5000/uploads/${photo}`}\n            className=\"img-thumbnail\"\n            alt=\"\"\n          />\n          <h1 className=\"text-center my-4\"> </h1>\n          {rating ? (\n            <div>\n              <span className=\"badge badge-secondary badge-success rounded-circle p-3\">\n                {rating}\n              </span>\n              <p> Rating </p>\n            </div>\n          ) : null}\n\n          <Link\n            to={`/add-review/${_id}`}\n            className=\"btn btn-light btn-block my-3\"\n          >\n            <i class=\"fas fa-pencil-alt\"></i>\n            Write a Review\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default DetailView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bootcampSelectors from '../store/bootcamps/reducer';\nimport * as bootcampActions from '../store/bootcamps/actions';\nimport { bindActionCreators } from 'redux';\nimport DetailView from '../component/DetailView';\nimport { Spinner } from 'reactstrap';\n\nexport class BootcampDetail extends Component {\n  componentDidMount() {\n    //debugger;\n    this.props.fetchBootcamp(this.props.match.params.id);\n  }\n\n  render() {\n    console.log('render bootcamp:', this.props.bootcamp.asMutable());\n    const bootcamp = this.props.bootcamp.asMutable();\n    console.log('object keys:', Object.keys(bootcamp).length);\n    console.log('data', bootcamp.data);\n    if (Object.keys(bootcamp).length) {\n      //debugger;\n      return (\n        <div>\n          <DetailView data={bootcamp.data} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>Bootcamp</h1>\n        <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    bootcamp: bootcampSelectors.getBootcamp(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      fetchBootcamp: bootcampActions.fetchBootcamp,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BootcampDetail);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardImg,\n  Row,\n  Col,\n} from 'reactstrap';\n\nconst DetailViewCard = (props) => {\n  const { name, description, id } = props.data;\n\n  return (\n    <div>\n      <Card>\n        <Row>\n          <Col md=\"4\">\n            <CardImg\n              src={`http://localhost:5000/uploads/photo_5d725a037b292f5f8ceff787.jpg`}\n            />\n          </Col>\n          <Col md=\"8\">\n            <CardBody>\n              <CardTitle tag=\"h5\">\n                <Link to={`/bootcamps/${id}`}>{name}</Link>\n              </CardTitle>\n              <CardText>\n                <p>{description}</p>\n              </CardText>\n            </CardBody>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default DetailViewCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bootcampSelectors from '../store/bootcamps/reducer';\nimport * as bootcampActions from '../store/bootcamps/actions';\nimport { bindActionCreators } from 'redux';\nimport { Spinner } from 'reactstrap';\n\nimport DetailViewCard from '../component/DetailViewCard';\n\nexport class AllBootcamps extends Component {\n  componentDidMount() {\n    this.props.fetchAllBootcamps();\n  }\n\n  render() {\n    console.log('render all bootcamps:', this.props.bootcamps.asMutable());\n    let bootcamps = this.props.bootcamps.asMutable();\n    console.log('Array Length:', Object.keys(bootcamps).length);\n    if (Object.keys(bootcamps).length && bootcamps.count) {\n      //debugger;\n      bootcamps = bootcamps.data.map((bootcamp) => {\n        return <DetailViewCard data={bootcamp} />;\n      });\n      return <div> {bootcamps} </div>;\n    }\n    return (\n      <div>\n        <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    bootcamps: bootcampSelectors.getAllBootcamps(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      fetchAllBootcamps: bootcampActions.fetchAllBootcamps,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllBootcamps);\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Col, Input, Button } from 'reactstrap';\n//import PropTypes from 'prop-types';\n\nexport class UserForm extends Component {\n  static redirect(link) {\n    return <Redirect to={link} />;\n  }\n\n  render() {\n    const { initialData } = this.props;\n    return (\n      <Formik\n        initialValues={initialData}\n        onSubmit={async (values, { setSubmitting, setStatus }) => {\n          const payload = {\n            email: values.email,\n            password: values.password,\n          };\n          try {\n            const { formActionDispatch } = this.props;\n            await formActionDispatch(payload).then(() => {\n              setSubmitting(false);\n              setStatus('done');\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        }}\n        render={({\n          values,\n          status,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setStatus,\n        }) => (\n          <div>\n            <Form onSubmit={handleSubmit}>\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"email\"\n                    type=\"text\"\n                    bsSize=\"lg\"\n                    placeholder=\"Email\"\n                    aria-label=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    bsSize=\"lg\"\n                    placeholder=\"Password\"\n                    aria-label=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row my-5\">\n                <Col md={{ size: 5 }}>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    aria-label=\"Login\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? 'Authenticating...' : 'Login'}\n                  </Button>\n                </Col>\n              </FormGroup>\n            </Form>\n            {status === 'done' && <Redirect to=\"/\" />}\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators({ formActionDispatch: ownProps.action }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(UserForm);\n","import React, { Component } from 'react';\nimport { Col, Row, Card, CardBody } from 'reactstrap';\n\nimport './FormView.css';\n\nexport default class FormView extends Component {\n  render() {\n    return (\n      <section className=\"form-view\">\n        <Row>\n          <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n            <Card>\n              <CardBody>\n                <div>{this.props.form}</div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n","//import * as userSelectors from '../store/users/reducer';\n\n//import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\n\n// import thunk from 'redux-thunk';\n// import * as reducers from '../store/reducers';\n\n//const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const store = createStore(\n//   combineReducers(reducers),\n//   composeEnhancer(applyMiddleware(thunk))\n// );\n\nclass UserService {\n  async authenticateUser(payload) {\n    const url = `http://localhost:5000/api/v1/auth/login`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `UserService authenticateUser failed, HTTP status ${response.status}`\n      );\n    }\n\n    const { token } = await response.json();\n\n    if (response.status === 400) {\n      throw token.errors;\n    }\n    return token;\n  }\n\n  async userAuthenticated(token) {\n    const url = 'http://localhost:5000/api/v1/auth/me';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `UserService getUserWithToken failed, HTTP status ${response.status}`\n      );\n    }\n\n    const { data } = await response.json();\n\n    return data;\n  }\n\n  async newUserRegister(payload) {\n    const url = 'http://localhost:5000/api/v1/auth/register';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (!response.ok && response.status !== 400) {\n      throw new Error(\n        `UserService newUserRegister failed, HTTP status ${response.status}`\n      );\n    }\n\n    const apiResponse = await response.json();\n\n    if (!apiResponse.success) {\n      throw apiResponse.error;\n    }\n\n    return apiResponse.token;\n  }\n}\n\nexport default new UserService();\n","import UserService from '../../services/users';\nimport * as types from './actionTypes';\nimport * as errorHandlerTypes from '../errorHandler/actionTypes';\n\n// export function fetchUser(id) {\n//   return async (dispatch) => {\n//     try {\n//       const userStatus = await UserDetails.getUserDetails(id)\n\n//       dispatch ({\n//         type: types.IS_LOGGED_IN,\n//         userStatus\n//       })\n//     } catch (error) {\n//       console.error(error)\n//     }\n//   }\n// }\n\nexport function authenticateUserAction(payload) {\n  return async (dispatch) => {\n    try {\n      const token = await UserService.authenticateUser(payload);\n\n      dispatch({\n        type: types.TOKEN,\n        token,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport function userAuthenticatedAction(token) {\n  return async (dispatch) => {\n    try {\n      const profile = await UserService.userAuthenticated(token);\n\n      dispatch({\n        type: types.USER_PROFILE,\n        profile,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport function registerUser(payload) {\n  return async (dispatch) => {\n    try {\n      const token = await UserService.newUserRegister(payload);\n      dispatch({\n        type: types.TOKEN,\n        token,\n      });\n      dispatch({ type: errorHandlerTypes.REQUEST_SUCCESS });\n    } catch (error) {\n      dispatch({\n        type: errorHandlerTypes.REQUEST_FAILURE,\n        errorMessage: error,\n      });\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UserForm from './UserForm';\nimport FormView from '../component/FormView';\n\nimport * as userActions from '../store/users/actions';\n\nexport class UserLogin extends Component {\n  render() {\n    const action = userActions.authenticateUserAction;\n    const initialData = {\n      email: '',\n      password: '',\n    };\n\n    return (\n      <FormView form={<UserForm initialData={initialData} action={action} />} />\n    );\n  }\n}\n\nexport default connect(UserLogin);\n","import Immutable from 'seamless-immutable';\n\nimport * as types from './actionTypes';\n\nconst initialState = Immutable({\n  hasError: false,\n  errorMessage: null,\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.REQUEST_FAILURE:\n      return Immutable({\n        ...state,\n        hasError: true,\n        errorMessage: action.errorMessage,\n      });\n    case types.REQUEST_SUCCESS:\n      return Immutable({\n        ...state,\n        hasError: false,\n      });\n    default:\n      return state;\n  }\n}\n\n//SELECTORS\nexport function getHasError(state) {\n  return state.errorHandler.hasError;\n}\n\nexport function getErrorMessage(state) {\n  return state.errorHandler.errorMessage;\n}\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Col, Input, Button, Alert } from 'reactstrap';\nimport * as Yup from 'yup';\nimport * as errorHandlerSelectors from '../store/errorHandler/reducer';\n//import PropTypes from 'prop-types';\n\nconst transformMyApiErrors = function (array) {\n  const errors = {};\n  const field = array.split('`')[1];\n  let message = array.split('`').pop().split(') ').pop();\n  message = `${field} ${message}`;\n  errors[field] = message;\n\n  return errors;\n};\n\nexport class RegisterForm extends Component {\n  static redirect(link) {\n    return <Redirect to={link} />;\n  }\n\n  static validate(getValidationSchema) {\n    return (values) => {\n      const validationSchema = getValidationSchema(values);\n      try {\n        validationSchema.validateSync(values, { abortEarly: false });\n        return {};\n      } catch (error) {\n        return RegisterForm.getErrorsFromValidationError(error);\n      }\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.getValidationSchema = this.getValidationSchema.bind(this);\n  }\n\n  getValidationSchema() {\n    const validator = {\n      name: Yup.string().required('Username is required'),\n      email: Yup.string()\n        .required('Email is required')\n        .email('Please add a valid email'),\n      password: Yup.string().required('Password is required'),\n      role: Yup.string().required('Please add role'),\n    };\n    return Yup.object().shape(validator);\n  }\n\n  static getErrorsFromValidationError(validationError) {\n    const FIRST_ERROR = 0;\n    return validationError.inner.reduce((errors, error) => {\n      return {\n        ...errors,\n        [error.path]: error.errors[FIRST_ERROR],\n      };\n    }, {});\n  }\n\n  render() {\n    const { initialData } = this.props;\n    return (\n      <Formik\n        initialValues={initialData}\n        validate={RegisterForm.validate(this.getValidationSchema)}\n        onSubmit={async (values, { setSubmitting, setStatus, setErrors }) => {\n          const payload = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            role: values.role,\n          };\n          try {\n            const { formActionDispatch } = this.props;\n            await formActionDispatch(payload).then(() => {\n              setSubmitting(false);\n              setStatus('done');\n              const { errorMessage } = this.props;\n              const { hasError } = this.props;\n              if (hasError) {\n                setErrors(transformMyApiErrors(errorMessage));\n              } else {\n                setStatus('done');\n              }\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        }}\n        render={({\n          values,\n          errors,\n          status,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setStatus,\n        }) => (\n          <div>\n            {errors.data && <Alert color=\"danger\">{errors.data}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    bsSize=\"lg\"\n                    placeholder=\"Name\"\n                    aria-label=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"email\"\n                    type=\"text\"\n                    bsSize=\"lg\"\n                    placeholder=\"Email\"\n                    aria-label=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    bsSize=\"lg\"\n                    placeholder=\"Password\"\n                    aria-label=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"role\"\n                    type=\"text\"\n                    bsSize=\"lg\"\n                    placeholder=\"Role\"\n                    aria-label=\"role\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.role}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row my-5\">\n                <Col md={{ size: 5 }}>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    aria-label=\"Register\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? 'Authenticating...' : 'Register'}\n                  </Button>\n                </Col>\n              </FormGroup>\n            </Form>\n            {status === 'done' && <Redirect to=\"/\" />}\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    hasError: errorHandlerSelectors.getHasError(state),\n    errorMessage: errorHandlerSelectors.getErrorMessage(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators({ formActionDispatch: ownProps.action }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RegisterForm from './RegisterForm';\nimport FormView from '../component/FormView';\n\nimport * as userActions from '../store/users/actions';\n\nexport class UserRegister extends Component {\n  render() {\n    const action = userActions.registerUser;\n    const initialData = {\n      name: '',\n      email: '',\n      password: '',\n      role: '',\n    };\n\n    return (\n      <FormView\n        form={<RegisterForm initialData={initialData} action={action} />}\n      />\n    );\n  }\n}\n\nexport default connect(UserRegister);\n","import React from 'react';\n\nconst ViewProfile = (props) => {\n  const { email, name } = props.data;\n  return (\n    <div>\n      <p>name: {name}</p>\n      <p>email: {email}</p>\n    </div>\n  );\n};\n\nexport default ViewProfile;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as userSelectors from '../store/users/reducer';\nimport * as userActions from '../store/users/actions';\n\nimport ViewProfile from '../component/ViewProfile';\nimport { bindActionCreators } from 'redux';\nimport { Spinner } from 'reactstrap';\n\nexport class ProfileView extends Component {\n  componentDidMount() {\n    this.props.userAuthenticatedAction(this.props.token);\n  }\n\n  render() {\n    console.log('render profile:', this.props.profile.asMutable());\n    const profile = this.props.profile.asMutable();\n    console.log('object keys:', Object.keys(profile).length);\n    if (Object.keys(profile).length) {\n      return (\n        <div>\n          <h1>Profile</h1>\n\n          <ViewProfile data={profile} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    profile: userSelectors.userAuthenticatedSelector(state),\n    token: userSelectors.getUserToken(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      userAuthenticatedAction: userActions.userAuthenticatedAction,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileView);\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Form, FormGroup, Col, Input, Button } from 'reactstrap';\n\nimport * as userSelectors from '../store/users/reducer';\n\nexport class ReviewForm extends Component {\n  static redirect(link) {\n    return <Redirect to={link} />;\n  }\n\n  render() {\n    const { initialData, token, match } = this.props;\n    return (\n      <Formik\n        initialValues={initialData}\n        onSubmit={async (values, { setSubmitting, setStatus }) => {\n          const payload = {\n            id: match.params.id,\n            payload: {\n              title: values.title,\n              text: values.description,\n              rating: values.rating,\n            },\n            token,\n          };\n          try {\n            const { formActionDispatch } = this.props;\n            await formActionDispatch(payload).then(() => {\n              setSubmitting(false);\n              setStatus('done');\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        }}\n        render={({\n          values,\n          status,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setStatus,\n        }) => (\n          <div>\n            <p>Write a Review</p>\n            <p>You must have attended and graduated this bootcamp to review</p>\n            <Form onSubmit={handleSubmit}>\n              <FormGroup className=\"row\">\n                <Col sm=\"6\">\n                  <Input\n                    name=\"title\"\n                    type=\"text\"\n                    bsSize=\"lg\"\n                    placeholder=\"Review title\"\n                    aria-label=\"title\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.title}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row\">\n                <Col md=\"8\">\n                  <Input\n                    name=\"description\"\n                    type=\"description\"\n                    bsSize=\"lg\"\n                    placeholder=\"Your review\"\n                    aria-label=\"description\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.description}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row\">\n                <Col md=\"8\">\n                  <Input\n                    name=\"rating\"\n                    type=\"rating\"\n                    bsSize=\"lg\"\n                    placeholder=\"Rating\"\n                    aria-label=\"rating\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.rating}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup className=\"row my-5\">\n                <Col md={{ size: 5 }}>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    aria-label=\"Submit Review\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? 'Authenticating...' : 'Submit Review'}\n                  </Button>\n                </Col>\n              </FormGroup>\n            </Form>\n            {status === 'done' && <Redirect to=\"/\" />}\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    token: userSelectors.getUserToken(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators({ formActionDispatch: ownProps.action }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ReviewForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReviewForm from './ReviewForm';\nimport FormView from '../component/FormView';\n\nimport * as bootcampActions from '../store/bootcamps/actions';\n\nexport class AddReview extends Component {\n  render() {\n    const action = bootcampActions.writeReview;\n    const initialData = {\n      title: '',\n      description: '',\n      rating: '',\n    };\n\n    return (\n      <FormView\n        form={<ReviewForm initialData={initialData} action={action} />}\n      />\n    );\n  }\n}\n\nexport default connect(AddReview);\n","import React, { Component } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport * as userSelectors from './store/users/reducer';\n\nimport BootcampDetail from './container/BootcampDetail';\nimport AllBootcamps from './container/AllBootcamps';\nimport { UserLogin } from './container/UserLogin';\nimport { UserRegister } from './container/UserRegister';\nimport ProfileView from './container/ProfileView';\nimport { AddReview } from './container/AddReview';\n\nclass App extends Component {\n  render() {\n    const { token } = this.props;\n    console.log('token value:', token);\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand to=\"/\">DevCamper</NavbarBrand>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"/\">Bootcamps</NavLink>\n            </NavItem>\n            <NavItem>\n              {token !== null ? (\n                <NavLink\n                  to=\"/profile\"\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                >\n                  View Profile\n                </NavLink>\n              ) : (\n                <NavLink\n                  to=\"/login\"\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                >\n                  Login\n                </NavLink>\n              )}\n            </NavItem>\n            <NavItem>\n              {token === null ? (\n                <NavLink\n                  to=\"/register\"\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                >\n                  Register\n                </NavLink>\n              ) : null}\n            </NavItem>\n          </Nav>\n        </Navbar>\n\n        <Switch>\n          <Route exact path=\"/\" component={AllBootcamps} />\n          <Route exact path=\"/bootcamps/:id\" component={BootcampDetail} />\n          <Route exact path=\"/login\" component={UserLogin} />\n          <Route exact path=\"/profile\" component={ProfileView} />\n          <Route exact path=\"/register\" component={UserRegister} />\n          <Route exact path=\"/add-review/:id\" component={AddReview} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    token: userSelectors.getUserToken(state),\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as reducers from './store/reducers';\nconst store = createStore(combineReducers(reducers), applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}